{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pasan\\\\Desktop\\\\Todo-App-MERN\\\\frontend\\\\src\\\\containers\\\\home\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Table, Row, Col, Button, FormGroup, FormControl } from 'react-bootstrap';\nimport Header from '../../components/header';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from '../../components/model';\nimport Input from '../../components/input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = props => {\n  _s();\n\n  const tasks = useSelector(state => state.tasks);\n  const [name, setName] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [show, setShow] = useState(false); // function to colose the model\n\n  const handleClose = () => {\n    setShow(false);\n  }; //form submit function\n\n\n  const submitForm = () => {\n    const payload = {\n      name,\n      endDate\n    };\n    console.log(payload); //setShow(false);\n  }; // function to show the add new task\n\n\n  const handleShow = () => setShow(true);\n\n  const renderAddTaskModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      handleClose: handleClose,\n      modalTitle: 'Add new Task',\n      onSubmit: submitForm,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Name\",\n        placeholder: \"Product Name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        controlId: \"date\",\n        bsSize: \"large\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          type: \"date\",\n          style: {\n            width: '100%'\n          },\n          value: endDate,\n          onChange: e => setEndDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            offset: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleShow,\n            children: \"Add a new Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 35\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Task Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"States\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tasks.tasks.map((data, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: ++index\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.activeStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), renderAddTaskModal()]\n  }, void 0, true);\n};\n\n_s(Home, \"NJlwcYmIwNE9MEGCIyb1YZjXzTQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Pasan/Desktop/Todo-App-MERN/frontend/src/containers/home/index.js"],"names":["React","useEffect","useState","Container","Table","Row","Col","Button","FormGroup","FormControl","Header","useDispatch","useSelector","Modal","Input","Home","props","tasks","state","name","setName","endDate","setEndDate","show","setShow","handleClose","submitForm","payload","console","log","handleShow","renderAddTaskModal","e","target","value","width","offset","map","data","index","title","activeStatus"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Container, Table, Row, Col, Button, FormGroup, FormControl } from 'react-bootstrap'\r\nimport Header from '../../components/header';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Modal from '../../components/model';\r\nimport Input from '../../components/input'\r\nconst Home = (props) => {\r\n\r\n  const tasks = useSelector(state => state.tasks);\r\n  const [name, setName] = useState('')\r\n  const [endDate, setEndDate] = useState('')\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  // function to colose the model\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  }\r\n\r\n \r\n  //form submit function\r\n\r\n  const submitForm = () => {\r\n\r\n    const payload = {\r\n      name,\r\n      endDate,\r\n  };\r\n\r\n  console.log(payload);\r\n    //setShow(false);\r\n  }\r\n\r\n\r\n\r\n  // function to show the add new task\r\n  const handleShow = () => setShow(true);\r\n\r\n  const renderAddTaskModal = () => {\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        modalTitle={'Add new Task'}\r\n        onSubmit={submitForm}\r\n      >\r\n        <Input\r\n          label=\"Name\"\r\n          placeholder=\"Product Name\"\r\n\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n\r\n        />\r\n        <FormGroup controlId=\"date\" bsSize=\"large\">\r\n         \r\n          <FormControl\r\n            type=\"date\"\r\n            style={{ width: '100%' }}\r\n            \r\n          value={endDate}\r\n          onChange={(e) => setEndDate(e.target.value)}\r\n          />\r\n        </FormGroup>\r\n\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container>\r\n        <Row>\r\n\r\n          <Col md={{ offset: 8 }}><Button variant=\"primary\" onClick={handleShow}>Add a new Task</Button>{' '}</Col>\r\n        </Row>\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Task Name</th>\r\n              <th>States</th>\r\n\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n            {tasks.tasks.map((data, index) => {\r\n              return (\r\n                <tr >\r\n                  <td>{++index}</td>\r\n                  <td>{data.title}</td>\r\n                  <td>{data.activeStatus}</td>\r\n\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n\r\n      </Container>\r\n      {renderAddTaskModal()}\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}