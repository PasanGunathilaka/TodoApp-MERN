{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pasan\\\\Desktop\\\\Todo-App-MERN\\\\frontend\\\\src\\\\containers\\\\home\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Container, Table, Row, Col, Button } from 'react-bootstrap';\nimport Header from '../../components/header';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = props => {\n  _s();\n\n  const tasks = useSelector(state => state.tasks);\n  const [show, setShow] = useState(false); // function to render the add new task model\n\n  const handleClose = () => {\n    // sending data as a form because it has an image\n    const form = new FormData();\n    form.append('name', name);\n    form.append('price', price);\n    form.append('quantity', quantity);\n    form.append('description', description);\n    form.append('category', categoryId); // for loop to add the multiple pictures\n\n    for (let pic of productPictures) {\n      form.append('productPicture', pic);\n    }\n\n    dispatch(addProduct(form));\n    setShow(false);\n  }; // function to show the add new model\n\n\n  const handleShow = () => setShow(true);\n\n  const renderAddTaskModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      handleClose: handleClose,\n      modalTitle: 'Add new Product',\n      children: \"body\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            offset: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleShow,\n            children: \"Add a new Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 35\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Task Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"States\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tasks.tasks.map((data, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: ++index\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.activeStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), renderAddTaskModal()]\n  }, void 0, true);\n};\n\n_s(Home, \"92fAXthcjsJwTNbL7fxMBPJ2aAk=\", false, function () {\n  return [useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Pasan/Desktop/Todo-App-MERN/frontend/src/containers/home/index.js"],"names":["React","Container","Table","Row","Col","Button","Header","useDispatch","useSelector","Home","props","tasks","state","show","setShow","useState","handleClose","form","FormData","append","name","price","quantity","description","categoryId","pic","productPictures","dispatch","addProduct","handleShow","renderAddTaskModal","offset","map","data","index","title","activeStatus"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Container, Table, Row, Col, Button } from 'react-bootstrap'\r\nimport Header from '../../components/header';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nconst Home = (props) => {\r\n\r\n  const tasks = useSelector(state => state.tasks);\r\n  const [show, setShow] = useState(false);\r\n  // function to render the add new task model\r\n  const handleClose = () => {\r\n    // sending data as a form because it has an image\r\n    const form = new FormData();\r\n    form.append('name', name);\r\n    form.append('price', price);\r\n    form.append('quantity', quantity);\r\n    form.append('description', description);\r\n    form.append('category', categoryId);\r\n\r\n    // for loop to add the multiple pictures\r\n    for (let pic of productPictures) {\r\n        form.append('productPicture', pic);\r\n    }\r\n\r\n\r\n    dispatch(addProduct(form));\r\n\r\n    setShow(false);\r\n}\r\n\r\n // function to show the add new model\r\n const handleShow = () => setShow(true);\r\n\r\n  const renderAddTaskModal = () => {\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        modalTitle={'Add new Product'}\r\n      >\r\n\r\n        body\r\n\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <Header />\r\n      <Container>\r\n        <Row>\r\n \r\n          <Col md={{ offset: 8 }}><Button variant=\"primary\" onClick={handleShow}>Add a new Task</Button>{' '}</Col>\r\n        </Row>\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Task Name</th>\r\n              <th>States</th>\r\n\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n            {tasks.tasks.map((data, index) => {\r\n              return (\r\n                <tr >\r\n                  <td>{++index}</td>\r\n                  <td>{data.title}</td>\r\n                  <td>{data.activeStatus}</td>\r\n\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n      {renderAddTaskModal()}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}